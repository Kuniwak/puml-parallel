@startuml

state "clientInitializing(serverStateMap, tools)" as c0
state "clientReady(tools)" as c1
state "clientProcessing(tools)" as c2
state "clientCallingMCPServer(tools)" as c3
[*] --> c0 : serverStateMap' = all pre-registered MCP are in not-running state, tools is empty set
c0 --> c0 : start(server) ; server is a pre-registered MCP server and in not-running state ; serverStateMap' is serverStateMap with server changed to not-initialized, tools' remains the same
c0 --> c0 : initializeReq(server) ; server is a pre-registered MCP server and not-initialized ; serverStateMap' is serverStateMap with server changed to initializing, tools' remains the same
c0 --> c0 : initializeRes(server) ; server is a pre-registered MCP server and initializing ; serverStateMap' is serverStateMap with server changed to initialized, tools' remains the same
c0 --> c0 : toolsListReq(server) ; server is a pre-registered MCP server and in initialized state ; serverStateMap' is serverStateMap with server changed to waiting for tools list, tools' remains the same
c0 --> c0 : toolsListRes(server,ts) ; server is a pre-registered MCP server and in initialized state & some in serverStateMap are not initialized ; serverStateMap' is serverStateMap with server changed to tools list complete, tools' is tools with ts added
c0 --> c1 : toolsListRes(server,ts) ; server is a pre-registered MCP server and in initialized state & all in serverStateMap are initialized ; serverStateMap' is serverStateMap with server changed to tools list complete, tools' is tools with ts added
c1 --> c2 : inputPrompt ; always transition possible ; tools' remains the same
c2 --> c1 : returnText ; always transition possible ; tools' remains the same
c2 --> c3 : toolsCallReq(tool) ; tool is included in tools ; tools' remains the same
c3 --> c2 : toolsCallRes(tool,resp) ; tool is included in tools ; tools' remains the same
  
@enduml
